REST API 教程
=====================

大家好！我希望你已经准备好工作了，因为我们将从无到有创建一个API. 这并不容易：需要做很多事并要整理很多理论。但我向你保证你将用你的努力换来喜悦。

我们当然会使用最佳实践并学习REST后边的所有理论。但我们同时也是实用主义者。如果你太坚持原则，你会被草拟的规范和博客的各种博文所淹没。你甚至会感到完美的RESTfule API是不可能存在的，适当的变通也许会更好。

相反，我们将创建一个非常漂亮的API，我们保留了REST最好的部分，并告诉你什么时候我们会破坏原则，以及什么时候原则值得商榷。我们会坚持简单的原则。不，我们将抨击API最丑陋的一面，如自定义方法和相关文档的细节都应该展现出来，并说明为什么。

项目：资源和链接
--------------------------------

项目？给你介绍Code Battles：一个超严肃的程序员通过项目作战的网站。等你注册完，你可以创建一个程序员并选择一个头像。REST是这些资源的基础。如果你把这个教程当做一个喝酒的游戏，你或许不愿意我每次说“资源”时就喝一杯。它对REST来说太重要了...不能等到第二章再介绍它。同样也不能忘了“状态转移”。

注意每个网页的链接，来了解资源交互。我们的API将类似于网站接口。

程序员这个角色，你可以注意到她：开启！基于一点运气，这将增长或减少程序员资源的能量等级。接下来，开始战斗，是程序员与项目之间的战斗。项目是我们第二个资源。

我的程序员受控并赢得了竞赛！竞赛就是我们第三个资源，我们可以通过到首页点击"得分"看到它们的集合体。

稍后，我将解释为什么这些是资源，但它们应该让人感觉很自然。


我们的世界控制计划是创建API来允许HTTP客户端做你看到的一切事情，甚至更多。但创建一个程序员的后端应该是什么样子呢？编辑它是怎样的？客户端发送的数据应该是json并且我们也应该返回json吗？我们怎样传达验证的错误信息并且URL结构怎么查询东西呢，如罗列程序员列表和开启一个程序员？HTTP方法和状态码如何？我们怎样写文档呢？客户端怎么知道创建一个程序员时什么字段该被POST，或者用什么URL来寻找项目来竞赛呢？

创建一个可用的，一致的API比创建一些终点型的应用要做的更多。但这也是你为什么在这的原因，开始吧!
